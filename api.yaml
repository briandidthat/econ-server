openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /crypto/spot/batch/historical:
    post:
      tags:
        - crypto-controller
      operationId: getMultipleHistoricalSpotPrices
      parameters:
        - name: caller
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchResponse'
  /stocks:
    get:
      tags:
        - stock-controller
      operationId: getStockPrice
      parameters:
        - name: apiKey
          in: header
          required: true
          schema:
            type: string
        - name: caller
          in: header
          required: false
          schema:
            type: string
        - name: symbol
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StockPriceResponse'
  /stocks/batch:
    get:
      tags:
        - stock-controller
      operationId: getBatchStockPrice
      parameters:
        - name: apiKey
          in: header
          required: true
          schema:
            type: string
        - name: caller
          in: header
          required: false
          schema:
            type: string
        - name: symbols
          in: query
          required: true
          schema:
            maxItems: 5
            minItems: 1
            type: array
            items:
              maxLength: 5
              minLength: 1
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchResponse'
  /readyz:
    get:
      tags:
        - health-check-controller
      operationId: isReady
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /healthz:
    get:
      tags:
        - health-check-controller
      operationId: isAvailable
      parameters:
        - name: caller
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /fred/observations/{seriesId}:
    get:
      tags:
        - fred-controller
      operationId: getObservations
      parameters:
        - name: apiKey
          in: header
          required: true
          schema:
            type: string
        - name: caller
          in: header
          required: false
          schema:
            type: string
        - name: seriesId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FredResponse'
  /fred/observations/{seriesId}/recent:
    get:
      tags:
        - fred-controller
      operationId: getMostRecentObservation
      parameters:
        - name: apiKey
          in: header
          required: true
          schema:
            type: string
        - name: caller
          in: header
          required: false
          schema:
            type: string
        - name: seriesId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Observation'
  /crypto/spot:
    get:
      tags:
        - crypto-controller
      operationId: getSpotPrice
      parameters:
        - name: caller
          in: header
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpotPrice'
  /crypto/spot/statistics:
    get:
      tags:
        - crypto-controller
      operationId: getPriceStatistics
      parameters:
        - name: caller
          in: header
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Statistic'
  /crypto/spot/historical:
    get:
      tags:
        - crypto-controller
      operationId: getHistoricalSpotPrice
      parameters:
        - name: caller
          in: header
          required: true
          schema:
            type: string
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpotPrice'
  /crypto/spot/batch:
    get:
      tags:
        - crypto-controller
      operationId: getMultipleSpotPrices
      parameters:
        - name: caller
          in: header
          required: true
          schema:
            type: string
        - name: symbols
          in: query
          required: true
          schema:
            maxItems: 5
            minItems: 2
            type: array
            items:
              maxLength: 5
              minLength: 2
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchResponse'
components:
  schemas:
    BatchRequest:
      type: object
      properties:
        requests:
          maxItems: 5
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/Request'
    Request:
      required:
        - symbol
      type: object
      properties:
        symbol:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    AssetPrice:
      type: object
      properties:
        symbol:
          type: string
        price:
          type: string
    BatchResponse:
      type: object
      properties:
        assetPrices:
          type: array
          items:
            $ref: '#/components/schemas/AssetPrice'
    StockPriceResponse:
      type: object
      properties:
        symbol:
          type: string
        price:
          type: string
    FredResponse:
      type: object
      properties:
        observation_start:
          type: string
        observation_end:
          type: string
        count:
          type: integer
          format: int32
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
    Observation:
      type: object
      properties:
        realtime_start:
          type: string
        realtime_end:
          type: string
        date:
          type: string
        value:
          type: string
    SpotPrice:
      type: object
      properties:
        symbol:
          type: string
        price:
          type: string
        date:
          type: string
          format: date
        base:
          type: string
          writeOnly: true
        amount:
          type: string
          writeOnly: true
    Statistic:
      type: object
      properties:
        symbol:
          type: string
        startPrice:
          type: string
        endPrice:
          type: string
        priceChange:
          type: string
        percentChange:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        timeFrame:
          type: string
